<?php

// all params defined in config file

/**
# API user: The user that is identified as making the call. you can
# also use your own API username that you created on PayPal’s sandbox
# or the PayPal live site
*/

//define('PP_API_USERNAME', 'pay_1192830097_biz_api1.sawce.net');

/**
# API_password: The password associated with the API user
# If you are using your own API username, enter the API password that
# was generated by PayPal below
# IMPORTANT - HAVING YOUR API PASSWORD INCLUDED IN THE MANNER IS NOT
# SECURE, AND ITS ONLY BEING SHOWN THIS WAY FOR TESTING PURPOSES
*/

//define('PP_API_PASSWORD', '1192830109');

/**
# API_Signature:The Signature associated with the API user. which is generated by paypal.
*/

//define('PP_API_SIGNATURE', 'AzKjJ-mpbRTUd4GoODTl5b70vfYHAFEAvevma52RqqvH7s37Nwx.JSLm');

/**
# Endpoint: this is the server URL which you have to connect for submitting your API request.
*/

//define('PP_API_ENDPOINT', 'https://api-3t.sandbox.paypal.com/nvp');
/**
USE_PROXY: Set this variable to TRUE to route all the API requests through proxy.
like define('PP_USE_PROXY',TRUE);
*/
//define('PP_USE_PROXY',FALSE);
/**
PROXY_HOST: Set the host name or the IP address of proxy server.
PROXY_PORT: Set proxy port.

PROXY_HOST and PROXY_PORT will be read only if USE_PROXY is set to TRUE
*/
//define('PP_PROXY_HOST', '127.0.0.1');
//define('PP_PROXY_PORT', '808');

/* Define the PayPal URL. This is the URL that the buyer is
   first sent to to authorize payment with their paypal account
   change the URL depending if you are testing on the sandbox
   or going to the live PayPal site
   For the sandbox, the URL is
   https://www.sandbox.paypal.com/webscr&cmd=_express-checkout&token=
   For the live site, the URL is
   https://www.paypal.com/webscr&cmd=_express-checkout&token=
   */
//define('PP_PAYPAL_URL', 'https://www.sandbox.paypal.com/webscr&cmd=_express-checkout&token=');

/**
# Version: this is the API version in the request.
# It is a mandatory parameter for each API request.
# The only supported value at this time is 2.3
*/

//define('PP_VERSION', '3.0');


/**
  * pp_cash_call: Function to perform the API call to PayPal using API signature
  * @methodName is name of API  method.
  * @nvpStr is nvp string.
  * returns an associtive array containing the response from the server.
*/


function pp_cash_call($methodName,$nvpStr)
{
	//declaring of global variables
	global $nvp_Header;

	//setting the curl parameters.
	$ch = curl_init();
	curl_setopt($ch, CURLOPT_URL,PP_API_ENDPOINT);
	curl_setopt($ch, CURLOPT_VERBOSE, 1);

	//turning off the server and peer verification(TrustManager Concept).
	curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE);
	curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, FALSE);

	curl_setopt($ch, CURLOPT_RETURNTRANSFER,1);
	curl_setopt($ch, CURLOPT_POST, 1);
    //if USE_PROXY constant set to TRUE in Constants.php, then only proxy will be enabled.
   //Set proxy name to PROXY_HOST and port number to PROXY_PORT in constants.php 
	if(PP_USE_PROXY)
	curl_setopt ($ch, CURLOPT_PROXY, PP_PROXY_HOST.":".PP_PROXY_PORT); 

	//NVPRequest for submitting to server
	$nvpreq="METHOD=".urlencode($methodName)."&VERSION=".urlencode(PP_VERSION)."&PWD=".urlencode(PP_API_PASSWORD)."&USER=".urlencode(PP_API_USERNAME)."&SIGNATURE=".urlencode(PP_API_SIGNATURE).$nvpStr;

	//setting the nvpreq as POST FIELD to curl
	curl_setopt($ch,CURLOPT_POSTFIELDS,$nvpreq);

	//getting response from server
	$response = curl_exec($ch);

	//convrting NVPResponse to an Associative Array
	$nvpResArray=pp_deformatNVP($response);
	$nvpReqArray=pp_deformatNVP($nvpreq);
	$_SESSION['nvpReqArray']=$nvpReqArray;

	if (curl_errno($ch)) {
		// moving to display page to display curl errors
		  $_SESSION['curl_error_no']=curl_errno($ch) ;
		  $_SESSION['curl_error_msg']=curl_error($ch);
		  $location = "APIError.php";
		  throw new DataException(ERR_PP_CURL);
	 } else {
		 //closing the curl
			curl_close($ch);
	  }

return $nvpResArray;
}

/** This function will take NVPString and convert it to an Associative Array and it will decode the response.
  * It is usefull to search for a particular key and displaying arrays.
  * @nvpstr is NVPString.
  * @nvpArray is Associative Array.
  */

function pp_deformatNVP($nvpstr)
{

	$intial=0;
 	$nvpArray = array();


	while(strlen($nvpstr)){
		//postion of Key
		$keypos= strpos($nvpstr,'=');
		//position of value
		$valuepos = strpos($nvpstr,'&') ? strpos($nvpstr,'&'): strlen($nvpstr);

		/*getting the Key and Value values and storing in a Associative Array*/
		$keyval=substr($nvpstr,$intial,$keypos);
		$valval=substr($nvpstr,$keypos+1,$valuepos-$keypos-1);
		//decoding the respose
		$nvpArray[urldecode($keyval)] =urldecode( $valval);
		$nvpstr=substr($nvpstr,$valuepos+1,strlen($nvpstr));
     }
	return $nvpArray;
}

function pp_pay($email, $amount) {
	$uniqueID = substr(md5($email . time()), 0, 30);
	$note = "Your Proceeds from Sawce";
	$emailSubject = "Your Proceeds from Sawce";
	
	$nvpstr = "&L_EMAIL0=$email&L_Amt0=$amount&L_UNIQUEID0=$uniqueID&L_NOTE0=$note";
	$nvpstr .= "&EMAILSUBJECT=$emailSubject&RECEIVERTYPE=EmailAddress&CURRENCYCODE=USD" ;
	$resArray = pp_cash_call("MassPay",$nvpstr);
	
	/*echo "<!--";
	print_r($resArray);
	echo "-->";*/
	
	if(strtoupper($resArray['ACK'])!="SUCCESS"){
		throw new DataException(ERR_PP_FAILURE);
		return false;
   	} else {
   		return true;
   	}
}

?>
